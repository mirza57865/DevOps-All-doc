DOMAIN= "http://localhost:3000"
PORT=3000
STATIC_DIR="./client"
PUBLISHABLE_KEY="pk_test_51N1XGMSFnzdVFdR96iBUu2VvHc4Tn6s8EOuugZZhb09A4equYIBCmCyeP7kI4MmcbQ4qc0VW0ZDCjGwOdRWvgkJm00X6jLo6Hf"
SECRET_KEY="sk_test_51N1XGMSFnzdVFdR9Z4M7eDzQWoCP7gCLfw0catA7HSh9AjU5AqHTIJj66iw5vOxU5e5uugY4lXQeN45QejcFQztu00kqCT1PHp"



FROM node:18-alpine

WORKDIR /root/Node_js_Project

COPY package*.json ./

RUN npm install

COPY . .

EXPOSE 3000

CMD ["npm","server.js"]



for node_module:   npm install express body-parser

docker build -t my-node-app .

docker run -it --name c1 my-node-app
docker rmi -f $(docker images -aq)
docker rm -f $(docker ps -a -q)
docker run -dt -p 3000:3000 bojjavenkatesh/image:01

docker run  --name   t1  -d   -P 3000:3000  image:01
docker tag image:01 bojjavenkatesh/my-repo:01
docker push bojjavenkatesh/my-repo:01



pk_test_51N12uMSIDZk8AWLgn9Z8T7iqU3Iq53bG6W0Mj3MyOEDlDB27N81Ao21n0iIuyFntTSKERLI35GrDaO76SvLjduXi00b41L7d63
sk_test_51N12uMSIDZk8AWLgPL4JTD8YB0FLi9bAYFnhn5uRMbgbtYLKuLyKG7JNs2UyU9QmQG0RTNXmHm0QL8A1TV3hINHy0049n1s4Bx






1  apt-get update
    2  sudo apt-get remove docker docker-engine docker.io containerd runc
    3  udo apt-get update
    4  sudo apt-get update
    5  sudo apt-get install     ca-certificates     curl     gnupg
    6  sudo install -m 0755 -d /etc/apt/keyrings
    7  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    8  sudo chmod a+r /etc/apt/keyrings/docker.gpg
    9  echo   "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   10  sudo apt-get update
   11  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
   12  sudo docker run hello-world
   13  docker -version
   14  docker --version
   15  sudo service docker start
   16  sudo service docker status
   17  docker apt install net-tools tree
   18  sudo apt install net-tools tree
   19  sudo netstat -nltp
   20  sudo netstat -nalp | grep docker
   21  sudo netstat -nalp
   22  sudo netstat -nalp | grep docker
   23  cd /var/lib/docker/
   24  ls -al
   25  ls -larth
   26  cd /var/run/docker/
   27  ls -larth
   28  sudo journalctl -u docker.service
   29  cd /var/lib/docker/
   30  ls -la
   31  cd containers/
   32  ls -larth
   33  ls -la
   34  cd ../../../
   35  cd ../
   36  ls -al
   37  cd ~
   38  ls -la
   39  cd /var/run/docker/
   40  ls -larth
   41  cd /var/lib/docker/
   42  ls -larth
   43  cd ../../../
   44  cd `


   45  cd ~
   46  vi .env
   47  apt install git -y
   48  git clone https://github.com/veeraboinaashok/Node_js_Project.git
   49  ls -la
   50  vi .env
   51  vi Dockerfile
   52  docker build -t image1 .
   53  vi Dockerfile
   54  docker build -t image1 .
   55  vi Dockerfile
   56  npm install express body-parser
   57  sudo apt install nodejs
   58  sudo apt install npm -y
   59  cd ~
   60  curl -sL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh
   61  nano nodesource_setup.sh
   62  sudo bash nodesource_setup.sh
   63  sudo apt install nodejs
   64  node -v
   65  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh
   66  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
   67  source ~/.bashrc
   68  nvm list-remote
   69  nvm install v16.14.0
   70  nvm install lts/fermium
   71  node -v
   72  docker build -t image1 .
   73  cd Node_js_Project/
   74  ls
   75  docker build -t image1 .
   76  docker images ls
   77  docker images -a
   78  docker rmi feb5d9fea6a5
   79  docker rmi -f feb5d9fea6a5
   80  npm run start
   81  cd ../
   82  vi Dockerfile
   83  npm run start
   84  cd Node_js_Project/
   85  npm run start
   86  npm install express body-parser
   87  npm run start
   88  cd ../
   89  vi Dockerfile
   90  cd Node_js_Project/
   91  npm run start
   92  pwd
   93  cd ../
   94  vi Dockerfile
   95  cd Node_js_Project/
   96  npm run start
   97  ls -al
   98  cd node_modules/
   99  ls
  100  cd ../../
  101  ls -al
  102  cd Node_js_Project/
  103  ls -al
  104  cd ../
  105  ls -al
  106  mv .env /root/Node_js_Project
  107  ls -al
  108  cd Node_js_Project/
  109  ls -al
  110  cd ../
  111  mv Dockerfile /root/Node_js_Project
  112  cd Node_js_Project/
  113  ls -al
  114  npm start
  115  npm run start
  116  ls
  117  ls -al
  118  docker build -t image1 .
  119  docker images ls
  120  docker images -a
  121  docker container run -t -i --rm image1
  122  docker container run -t -i --rm image1 npm run start


Dockerfile 
-------------------------------------------------
FROM node:18-alpine

WORKDIR /root/Node_js_Project

COPY package*.json ./

RUN  npm install

COPY . .

EXPOSE 3000

CMD ["npm","server.js"]


.env file
------------------------------------------------------------
DOMAIN= "http://localhost:3000"
PORT=3000
STATIC_DIR="./client"
PUBLISHABLE_KEY="pk_test_51N12uMSIDZk8AWLgn9Z8T7iqU3Iq53bG6W0Mj3MyOEDlDB27N81Ao21n0iIuyFntTSKERLI35GrDaO76SvLjduXi00b41L7d63"
SECRET_KEY="sk_test_51N12uMSIDZk8AWLgPL4JTD8YB0FLi9bAYFnhn5uRMbgbtYLKuLyKG7JNs2UyU9QmQG0RTNXmHm0QL8A1TV3hINHy0049n1s4Bx"



error
--------------------------------
root@ip-172-31-8-120:~/Node_js_Project# docker container run -t -i --rm image1 npm run start

> stripe-integration@1.0.0 start
> node server.js

Server listening on port: 3000
You may access you app at: http://localhost:3000
^Cnpm ERR! path /root/Node_js_Project
npm ERR! command failed
npm ERR! signal SIGINT
npm ERR! command sh -c node server.js

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2023-04-28T05_27_09_045Z-debug-0.log


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
docker container run -d -p 3000:3000 image01 npm run start
 docker ps -a

docker tag images:0.1 bojjavenkatesh/nodejs:0.1
docker push bojjavenkatesh/nodejs:0.1


+++++++++++++++++++++++++++++++++

please find the GitHub URL of Node-js Static web application .Everyone has to deploy in your local server,Docker conatiner and finally create CI-CD with jenkins.
GitHub URL:https://github.com/Marolix2011/Node_js_Project
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
pipeline {
    agent any
    tools{
          docker 'docker_23_0_5'
    }
    stages{
        stage('Build Maven'){
            steps{
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/bvenkydevops/Node_js_Project']])
            }
        }
        stage('Build docker image'){
            steps{
                script{
                    sh 'docker build -t image02 .'
                }
            }
        }
        stage('Push image to Hub'){
            steps{
                script{
                   withCredentials([string(credentialsId: 'dockerhub-pwd', variable: 'dockerhubpwd')]) {
                   sh 'docker login -u bojjavenkatesh -p ${dockerhubpwd}'

}
                   sh 'docker push bojjavenkatesh/image02'
                }
            }
        }
        }
    }
}



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



pipeline{
    agent any
    stages{
        stage('checkout code'){
            steps{
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/bvenkydevops/Node_js_Project']])
            }
        }
        stage('Build docker image'){
            steps{
             script{
                 sh 'docker build -t image02 .'
             }   
            }
        }
        stage('Push image to Hub'){
            steps{
                script{
                    withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]){
                        sh 'docker login -u bojjavenkatesh -p ${dockerhub}'
                    }
                       sh 'docker push bojjavenkatesh/image02'
                }
            }
        }
    }
}




++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
docker rmi -f $(docker images -a -q) --for images delete
docker rm -f $(docker ps -a -q)  ---for delete all running and stoped containers
npm install express body-parser

sudo service docker start
sudo service docker status
 sudo chmod 666 /var/run/docker.sock
sudo chmod g+rw /var/run/docker.sock
+++++++++++++++++++++
apt-get update -y
  165  sudo chmod g+rw /var/run/docker.sock
  166  sudo service docker start



+++++++++++++++
docker build -t image1 .
docker container run -d -p 3000:3000 image1 npm run start
docker tag images:0.1 bojjavenkatesh/nodejs:0.1
docker push bojjavenkatesh/nodejs:0.1
docker container run -d -p 3000:3000 images npm run start

+++++++++++++++++++++++++++++++++++++++++++++++++++++++

pk_test_51N12uMSIDZk8AWLgn9Z8T7iqU3Iq53bG6W0Mj3MyOEDlDB27N81Ao21n0iIuyFntTSKERLI35GrDaO76SvLjduXi00b41L7d63

sk_test_51N12uMSIDZk8AWLgPL4JTD8YB0FLi9bAYFnhn5uRMbgbtYLKuLyKG7JNs2UyU9QmQG0RTNXmHm0QL8A1TV3hINHy0049n1s4Bx


++++++++++++++++++++++++++++
docker push veeraboinaashok0124/nodejs:tagname
